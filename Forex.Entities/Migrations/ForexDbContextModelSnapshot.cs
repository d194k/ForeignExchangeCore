// <auto-generated />
using System;
using Forex.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Forex.Entities.Migrations
{
    [DbContext(typeof(ForexDbContext))]
    partial class ForexDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Forex.Entities.Models.ExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SyncId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SyncId", "Currency")
                        .IsUnique()
                        .HasFilter("[Currency] IS NOT NULL");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("Forex.Entities.Models.ExchangeRateSyncBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BaseCurrency")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SyncDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SyncDate", "BaseCurrency")
                        .IsUnique()
                        .HasFilter("[BaseCurrency] IS NOT NULL");

                    b.ToTable("ExchangeRateSyncBase");
                });

            modelBuilder.Entity("Forex.Entities.Models.ExchangeRate", b =>
                {
                    b.HasOne("Forex.Entities.Models.ExchangeRateSyncBase", "ExchangeRateSyncBase")
                        .WithMany("ExchangeRate")
                        .HasForeignKey("SyncId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExchangeRateSyncBase");
                });

            modelBuilder.Entity("Forex.Entities.Models.ExchangeRateSyncBase", b =>
                {
                    b.Navigation("ExchangeRate");
                });
#pragma warning restore 612, 618
        }
    }
}
